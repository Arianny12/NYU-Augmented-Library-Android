{"ast":null,"code":"import React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScreenTemplate from \"../Screens/screenTemplate\";\nimport ChatStyles from \"../Screens/chatStyles\";\nfunction chatAlert() {\n  return Alert.alert('Chat with a librarian', 'This button will eventually allow you to contact a librarian');\n}\nfunction emailAlert() {\n  return Alert.alert('Email', 'This button will eventually allow you to email a librarian');\n}\nfunction alertFunction(comm) {\n  var response;\n  if (comm === 'chat') {\n    response = chatAlert();\n  } else {\n    response = emailAlert();\n  }\n  return response;\n}\nvar Alerts = function Alerts() {\n  var chatAlert = function chatAlert() {\n    return Alert.alert('Alert Title', 'My Alert Msg', [{\n      text: 'Cancel',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }]);\n  };\n  var emailAlert = function emailAlert() {\n    return Alert.alert('Alert Title', 'My Alert Msg', [{\n      text: 'Ask me later',\n      onPress: function onPress() {\n        return console.log('Ask me later pressed');\n      }\n    }]);\n  };\n  return React.createElement(View, {\n    style: ChatStyles\n  }, React.createElement(Button, {\n    title: 'chatAlert',\n    onPress: chatAlert\n  }), React.createElement(Button, {\n    title: 'emailAlert',\n    onPress: emailAlert\n  }));\n};\nfunction ChatWithALibrarian() {\n  return React.createElement(ScreenTemplate, null, React.createElement(ScrollView, null, React.createElement(View, {\n    style: {\n      height: 50,\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      borderBottomWidth: 2,\n      borderColor: 'black',\n      borderStyle: 'solid'\n    }\n  }, React.createElement(Text, null, \"Chat with a librarian!\")), React.createElement(View, null, React.createElement(Button, {\n    title: 'Chat',\n    onPress: alertFunction('chat')\n  }), React.createElement(Button, {\n    title: 'Email',\n    onPress: alertFunction('email')\n  }))));\n}\nexport default Alerts;","map":{"version":3,"names":["React","ScrollView","StyleSheet","Text","View","Button","Alert","ScreenTemplate","ChatStyles","chatAlert","alert","emailAlert","alertFunction","comm","response","Alerts","text","onPress","console","log","style","createElement","title","ChatWithALibrarian","height","backgroundColor","justifyContent","borderBottomWidth","borderColor","borderStyle"],"sources":["/Users/elsamitchell/NYU-Augmented-Library-Android/ScreenStacks/ChatWithALibrarian.js"],"sourcesContent":["import React from 'react';\nimport {\n  ScrollView,\n  StyleSheet, Text, View, Button, Alert\n} from 'react-native';\nimport ScreenTemplate from \"../Screens/screenTemplate\";\nimport ChatStyles from \"../Screens/chatStyles\";\n\n\nfunction chatAlert() {\n    return Alert.alert('Chat with a librarian', 'This button will eventually allow you to contact a librarian')\n}\n\nfunction emailAlert() {\n    return Alert.alert('Email', 'This button will eventually allow you to email a librarian')\n}\n\nfunction alertFunction(comm) {\n    let response\n    if (comm === 'chat') {\n        response = chatAlert()\n    } else {\n        response = emailAlert()\n    }\n    return response\n}\n\nconst Alerts = () => {\n    const chatAlert = () =>\n        Alert.alert('Alert Title', 'My Alert Msg', [\n            {\n                text: 'Cancel',\n                onPress: () => console.log('Cancel Pressed'),\n                style: 'cancel',\n            },\n            {text: 'OK', onPress: () => console.log('OK Pressed')},\n        ]);\n    const emailAlert = () =>\n        Alert.alert('Alert Title', 'My Alert Msg', [\n            {\n                text: 'Ask me later',\n                onPress: () => console.log('Ask me later pressed')\n            }\n        ]);\n    return (\n        <View style={ChatStyles}>\n            <Button title={'chatAlert'} onPress={chatAlert} />\n            <Button title={'emailAlert'} onPress={emailAlert} />\n        </View>\n    );\n};\n\nfunction ChatWithALibrarian() {\n  return(\n    <ScreenTemplate>\n      <ScrollView>\n        <View\n            style={{\n              height: 50,\n              backgroundColor:'white',\n              justifyContent:'center',\n              borderBottomWidth:2,\n              borderColor:'black',\n              borderStyle:'solid'\n            }}>\n            <Text>Chat with a librarian!</Text>\n          </View>\n        <View>\n          <Button title={'Chat'} onPress={alertFunction('chat')}></Button>\n          <Button title={'Email'} onPress={alertFunction('email')}></Button>\n        </View>\n      </ScrollView>\n    </ScreenTemplate>\n  )\n}\n\nexport default Alerts;\n// onPress={} color={}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAK1B,OAAOC,cAAc;AACrB,OAAOC,UAAU;AAGjB,SAASC,SAASA,CAAA,EAAG;EACjB,OAAOH,KAAK,CAACI,KAAK,CAAC,uBAAuB,EAAE,8DAA8D,CAAC;AAC/G;AAEA,SAASC,UAAUA,CAAA,EAAG;EAClB,OAAOL,KAAK,CAACI,KAAK,CAAC,OAAO,EAAE,4DAA4D,CAAC;AAC7F;AAEA,SAASE,aAAaA,CAACC,IAAI,EAAE;EACzB,IAAIC,QAAQ;EACZ,IAAID,IAAI,KAAK,MAAM,EAAE;IACjBC,QAAQ,GAAGL,SAAS,EAAE;EAC1B,CAAC,MAAM;IACHK,QAAQ,GAAGH,UAAU,EAAE;EAC3B;EACA,OAAOG,QAAQ;AACnB;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACjB,IAAMN,SAAS,GAAG,SAAZA,SAASA,CAAA;IAAA,OACXH,KAAK,CAACI,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,CACvC;MACIM,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAAA;MAC5CC,KAAK,EAAE;IACX,CAAC,EACD;MAACJ,IAAI,EAAE,IAAI;MAAEC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAAA;IAAA,CAAC,CACzD,CAAC;EAAA;EACN,IAAMR,UAAU,GAAG,SAAbA,UAAUA,CAAA;IAAA,OACZL,KAAK,CAACI,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,CACvC;MACIM,IAAI,EAAE,cAAc;MACpBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MAAA;IACtD,CAAC,CACJ,CAAC;EAAA;EACN,OACInB,KAAA,CAAAqB,aAAA,CAACjB,IAAI;IAACgB,KAAK,EAAEZ;EAAW,GACpBR,KAAA,CAAAqB,aAAA,CAAChB,MAAM;IAACiB,KAAK,EAAE,WAAY;IAACL,OAAO,EAAER;EAAU,EAAG,EAClDT,KAAA,CAAAqB,aAAA,CAAChB,MAAM;IAACiB,KAAK,EAAE,YAAa;IAACL,OAAO,EAAEN;EAAW,EAAG,CACjD;AAEf,CAAC;AAED,SAASY,kBAAkBA,CAAA,EAAG;EAC5B,OACEvB,KAAA,CAAAqB,aAAA,CAACd,cAAc,QACbP,KAAA,CAAAqB,aAAA,CAACpB,UAAU,QACTD,KAAA,CAAAqB,aAAA,CAACjB,IAAI;IACDgB,KAAK,EAAE;MACLI,MAAM,EAAE,EAAE;MACVC,eAAe,EAAC,OAAO;MACvBC,cAAc,EAAC,QAAQ;MACvBC,iBAAiB,EAAC,CAAC;MACnBC,WAAW,EAAC,OAAO;MACnBC,WAAW,EAAC;IACd;EAAE,GACF7B,KAAA,CAAAqB,aAAA,CAAClB,IAAI,QAAC,wBAAsB,CAAO,CAC9B,EACTH,KAAA,CAAAqB,aAAA,CAACjB,IAAI,QACHJ,KAAA,CAAAqB,aAAA,CAAChB,MAAM;IAACiB,KAAK,EAAE,MAAO;IAACL,OAAO,EAAEL,aAAa,CAAC,MAAM;EAAE,EAAU,EAChEZ,KAAA,CAAAqB,aAAA,CAAChB,MAAM;IAACiB,KAAK,EAAE,OAAQ;IAACL,OAAO,EAAEL,aAAa,CAAC,OAAO;EAAE,EAAU,CAC7D,CACI,CACE;AAErB;AAEA,eAAeG,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}