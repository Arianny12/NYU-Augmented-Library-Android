{"ast":null,"code":"import React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScreenTemplate from \"../Screens/screenTemplate\";\nimport style from \"../Screens/chatStyles\";\nvar chatWithALibrarian = function chatWithALibrarian() {\n  var chatAlert = function chatAlert() {\n    return Alert.alert('Alert Title', 'My Alert Msg', [{\n      text: 'Cancel',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }]);\n  };\n  var emailAlert = function emailAlert() {\n    return Alert.alert('Alert Title', 'My Alert Msg', [{\n      text: 'Ask me later',\n      onPress: function onPress() {\n        return console.log('Ask me later pressed');\n      }\n    }]);\n  };\n  return React.createElement(ScreenTemplate, null, React.createElement(ScrollView, null, React.createElement(View, {\n    style: style.scrollStyle\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: style.title\n  }, \"Chat with a Librarian!\"))), React.createElement(View, {\n    style: style.buttonContainer\n  }, React.createElement(View, {\n    style: style.button\n  }, React.createElement(Text, {\n    style: style.buttonTitle\n  }, \"Chat\"))), React.createElement(View, {\n    style: style.buttonContainer\n  }, React.createElement(View, {\n    style: style.button\n  }, React.createElement(Text, {\n    style: style.buttonTitle\n  }, \"Email\")))));\n};\nexport default chatWithALibrarian;","map":{"version":3,"names":["React","ScrollView","Text","View","Button","Alert","ScreenTemplate","style","chatWithALibrarian","chatAlert","alert","text","onPress","console","log","emailAlert","createElement","scrollStyle","title","buttonContainer","button","buttonTitle"],"sources":["/Users/elsamitchell/NYU-Augmented-Library-Android/ScreenStacks/ChatWithALibrarian.js"],"sourcesContent":["import React from 'react';\nimport {\n  ScrollView,\n  Text, View, Button, Alert\n} from 'react-native';\nimport ScreenTemplate from \"../Screens/screenTemplate\";\nimport style from \"../Screens/chatStyles\";\n\nconst chatWithALibrarian = () => {\n    const chatAlert = () =>\n        Alert.alert('Alert Title', 'My Alert Msg', [\n            {\n                text: 'Cancel',\n                onPress: () => console.log('Cancel Pressed'),\n                style: 'cancel',\n            },\n            {text: 'OK', onPress: () => console.log('OK Pressed')},\n        ]);\n    const emailAlert = () =>\n        Alert.alert('Alert Title', 'My Alert Msg', [\n            {\n                text: 'Ask me later',\n                onPress: () => console.log('Ask me later pressed')\n            }\n        ]);\n    return (\n        <ScreenTemplate>\n          <ScrollView>\n            <View style={style.scrollStyle}>\n                <View>\n                    <Text style={style.title}>Chat with a Librarian!</Text>\n                </View>\n              </View>\n              <View style={style.buttonContainer}>\n                  <View style={style.button}>\n                      <Text style={style.buttonTitle}>Chat</Text>\n                      {/*<Button title={'Chat'} onPress={chatAlert}></Button>*/}\n                  </View>\n              </View>\n              <View style={style.buttonContainer}>\n                  <View style={style.button}>\n                      <Text style={style.buttonTitle}>Email</Text>\n                      {/*<Button title={'Email'} onPress={emailAlert}></Button>*/}\n                  </View>\n              </View>\n          </ScrollView>\n        </ScreenTemplate>\n    );\n};\n\n\nexport default chatWithALibrarian;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAK1B,OAAOC,cAAc;AACrB,OAAOC,KAAK;AAEZ,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAC7B,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA;IAAA,OACXJ,KAAK,CAACK,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,CACvC;MACIC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAAA;MAC5CP,KAAK,EAAE;IACX,CAAC,EACD;MAACI,IAAI,EAAE,IAAI;MAAEC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAAA;IAAA,CAAC,CACzD,CAAC;EAAA;EACN,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA;IAAA,OACZV,KAAK,CAACK,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,CACvC;MACIC,IAAI,EAAE,cAAc;MACpBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MAAA;IACtD,CAAC,CACJ,CAAC;EAAA;EACN,OACId,KAAA,CAAAgB,aAAA,CAACV,cAAc,QACbN,KAAA,CAAAgB,aAAA,CAACf,UAAU,QACTD,KAAA,CAAAgB,aAAA,CAACb,IAAI;IAACI,KAAK,EAAEA,KAAK,CAACU;EAAY,GAC3BjB,KAAA,CAAAgB,aAAA,CAACb,IAAI,QACDH,KAAA,CAAAgB,aAAA,CAACd,IAAI;IAACK,KAAK,EAAEA,KAAK,CAACW;EAAM,GAAC,wBAAsB,CAAO,CACpD,CACF,EACPlB,KAAA,CAAAgB,aAAA,CAACb,IAAI;IAACI,KAAK,EAAEA,KAAK,CAACY;EAAgB,GAC/BnB,KAAA,CAAAgB,aAAA,CAACb,IAAI;IAACI,KAAK,EAAEA,KAAK,CAACa;EAAO,GACtBpB,KAAA,CAAAgB,aAAA,CAACd,IAAI;IAACK,KAAK,EAAEA,KAAK,CAACc;EAAY,GAAC,MAAI,CAAO,CAExC,CACJ,EACPrB,KAAA,CAAAgB,aAAA,CAACb,IAAI;IAACI,KAAK,EAAEA,KAAK,CAACY;EAAgB,GAC/BnB,KAAA,CAAAgB,aAAA,CAACb,IAAI;IAACI,KAAK,EAAEA,KAAK,CAACa;EAAO,GACtBpB,KAAA,CAAAgB,aAAA,CAACd,IAAI;IAACK,KAAK,EAAEA,KAAK,CAACc;EAAY,GAAC,OAAK,CAAO,CAEzC,CACJ,CACE,CACE;AAEzB,CAAC;AAGD,eAAeb,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}