{"ast":null,"code":"import 'react-native-gesture-handler';\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { WelcomeScreen, Services, About, SignIn, ReserveScreen, ARVision, PickTime, SearchScreen } from \"./index\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport RoomReservationStack from \"./ScreenStacks/RoomReservationStack\";\nimport Icon from \"@expo/vector-icons/AntDesign\";\nvar Tab = createBottomTabNavigator();\nvar _screenOptions = function screenOptions(route, color) {\n  var iconName;\n  switch (route.name) {\n    case 'Home':\n      iconName = 'home';\n      break;\n    case 'Browse':\n      iconName = 'appstore-o';\n      break;\n    case 'Library':\n      iconName = 'folder1';\n      break;\n    default:\n      break;\n  }\n  return React.createElement(Icon, {\n    name: iconName,\n    color: color,\n    size: 24\n  });\n};\nexport default function App() {\n  var stackDefault = {\n    headerShown: false\n  };\n  return React.createElement(NavigationContainer, null, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return _screenOptions(route, color);\n        }\n      };\n    }\n  }, React.createElement(Tab.Screen, {\n    name: 'Welcome Screen',\n    component: WelcomeScreen\n  }), React.createElement(Tab.Screen, {\n    name: 'SignIn',\n    component: SignIn\n  }), React.createElement(Tab.Screen, {\n    name: 'About',\n    component: About\n  }), React.createElement(Tab.Screen, {\n    name: 'Services',\n    component: Services\n  }), React.createElement(Tab.Screen, {\n    name: 'RoomReservationStack',\n    component: RoomReservationStack\n  }), React.createElement(Tab.Screen, {\n    name: 'Search',\n    component: SearchScreen\n  })));\n}","map":{"version":3,"names":["React","createStackNavigator","NavigationContainer","WelcomeScreen","Services","About","SignIn","ReserveScreen","ARVision","PickTime","SearchScreen","createBottomTabNavigator","RoomReservationStack","Icon","Tab","screenOptions","route","color","iconName","name","createElement","size","App","stackDefault","headerShown","Navigator","_ref","tabBarIcon","_ref2","Screen","component"],"sources":["/Users/jacintogomez/Desktop/nyual/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport {\n  WelcomeScreen,\n  Services,\n  About,\n  SignIn,\n  ReserveScreen,\n  ARVision,\n  PickTime,\n  SearchScreen,\n} from './index';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport RoomReservationStack from './ScreenStacks/RoomReservationStack';\nimport Icon from 'react-native-vector-icons/AntDesign';\n\nconst Tab = createBottomTabNavigator();\n\nconst screenOptions = (route, color) => {\n  let iconName;\n\n  switch (route.name) {\n    case 'Home':\n      iconName = 'home';\n      break;\n    case 'Browse':\n      iconName = 'appstore-o';\n      break;\n    case 'Library':\n      iconName = 'folder1';\n      break;\n    default:\n      break;\n  }\n\n  return <Icon name={iconName} color={color} size={24} />;\n};\n\nexport default function App() {\n  const stackDefault = { headerShown: false };\n  return (\n    <NavigationContainer>\n      <Tab.Navigator // TODO Understand THis!!!\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ color }) => screenOptions(route, color),\n        })}\n      >\n        <Tab.Screen name={'Welcome Screen'} component={WelcomeScreen} />\n        <Tab.Screen name={'SignIn'} component={SignIn} />\n        <Tab.Screen name={'About'} component={About} />\n        <Tab.Screen name={'Services'} component={Services} />\n        <Tab.Screen\n          name={'RoomReservationStack'}\n          component={RoomReservationStack}\n        />\n        <Tab.Screen name={'Search'} component={SearchScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"AAAA,OAAO,8BAA8B;AACrC,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,aAAa,EACbC,QAAQ,EACRC,KAAK,EACLC,MAAM,EACNC,aAAa,EACbC,QAAQ,EACRC,QAAQ,EACRC,YAAY;AAEd,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,oBAAoB;AAC3B,OAAOC,IAAI;AAEX,IAAMC,GAAG,GAAGH,wBAAwB,EAAE;AAEtC,IAAMI,cAAa,GAAG,SAAhBA,aAAaA,CAAIC,KAAK,EAAEC,KAAK,EAAK;EACtC,IAAIC,QAAQ;EAEZ,QAAQF,KAAK,CAACG,IAAI;IAChB,KAAK,MAAM;MACTD,QAAQ,GAAG,MAAM;MACjB;IACF,KAAK,QAAQ;MACXA,QAAQ,GAAG,YAAY;MACvB;IACF,KAAK,SAAS;MACZA,QAAQ,GAAG,SAAS;MACpB;IACF;MACE;EAAM;EAGV,OAAOlB,KAAA,CAAAoB,aAAA,CAACP,IAAI;IAACM,IAAI,EAAED,QAAS;IAACD,KAAK,EAAEA,KAAM;IAACI,IAAI,EAAE;EAAG,EAAG;AACzD,CAAC;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAMC,YAAY,GAAG;IAAEC,WAAW,EAAE;EAAM,CAAC;EAC3C,OACExB,KAAA,CAAAoB,aAAA,CAAClB,mBAAmB,QAClBF,KAAA,CAAAoB,aAAA,CAACN,GAAG,CAACW,SAAS;IACZV,aAAa,EAAE,SAAAA,cAAAW,IAAA;MAAA,IAAGV,KAAK,GAAAU,IAAA,CAALV,KAAK;MAAA,OAAQ;QAC7BW,UAAU,EAAE,SAAAA,WAAAC,KAAA;UAAA,IAAGX,KAAK,GAAAW,KAAA,CAALX,KAAK;UAAA,OAAOF,cAAa,CAACC,KAAK,EAAEC,KAAK,CAAC;QAAA;MACxD,CAAC;IAAA;EAAE,GAEHjB,KAAA,CAAAoB,aAAA,CAACN,GAAG,CAACe,MAAM;IAACV,IAAI,EAAE,gBAAiB;IAACW,SAAS,EAAE3B;EAAc,EAAG,EAChEH,KAAA,CAAAoB,aAAA,CAACN,GAAG,CAACe,MAAM;IAACV,IAAI,EAAE,QAAS;IAACW,SAAS,EAAExB;EAAO,EAAG,EACjDN,KAAA,CAAAoB,aAAA,CAACN,GAAG,CAACe,MAAM;IAACV,IAAI,EAAE,OAAQ;IAACW,SAAS,EAAEzB;EAAM,EAAG,EAC/CL,KAAA,CAAAoB,aAAA,CAACN,GAAG,CAACe,MAAM;IAACV,IAAI,EAAE,UAAW;IAACW,SAAS,EAAE1B;EAAS,EAAG,EACrDJ,KAAA,CAAAoB,aAAA,CAACN,GAAG,CAACe,MAAM;IACTV,IAAI,EAAE,sBAAuB;IAC7BW,SAAS,EAAElB;EAAqB,EAChC,EACFZ,KAAA,CAAAoB,aAAA,CAACN,GAAG,CAACe,MAAM;IAACV,IAAI,EAAE,QAAS;IAACW,SAAS,EAAEpB;EAAa,EAAG,CACzC,CACI;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}