{"ast":null,"code":"import React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScreenTemplate from \"../Screens/screenTemplate\";\nimport ChatStyles from \"../Screens/chatStyles\";\nvar Alerts = function Alerts() {\n  var chatAlert = function chatAlert() {\n    return Alert.alert('Alert Title', 'My Alert Msg', [{\n      text: 'Cancel',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }]);\n  };\n  var emailAlert = function emailAlert() {\n    return Alert.alert('Alert Title', 'My Alert Msg', [{\n      text: 'Ask me later',\n      onPress: function onPress() {\n        return console.log('Ask me later pressed');\n      }\n    }]);\n  };\n  return React.createElement(ScreenTemplate, null, React.createElement(ScrollView, null, React.createElement(View, {\n    style: {\n      height: 50,\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      borderBottomWidth: 2,\n      borderColor: 'black',\n      borderStyle: 'solid'\n    }\n  }, React.createElement(Text, null, \"Chat with a librarian!\")), React.createElement(View, null, React.createElement(Button, {\n    title: 'Chat',\n    onPress: chatAlert\n  }), React.createElement(Button, {\n    title: 'Email',\n    onPress: emailAlert\n  }))));\n};\nexport default Alerts;","map":{"version":3,"names":["React","ScrollView","StyleSheet","Text","View","Button","Alert","ScreenTemplate","ChatStyles","Alerts","chatAlert","alert","text","onPress","console","log","style","emailAlert","createElement","height","backgroundColor","justifyContent","borderBottomWidth","borderColor","borderStyle","title"],"sources":["/Users/elsamitchell/NYU-Augmented-Library-Android/ScreenStacks/ChatWithALibrarian.js"],"sourcesContent":["import React from 'react';\nimport {\n  ScrollView,\n  StyleSheet, Text, View, Button, Alert\n} from 'react-native';\nimport ScreenTemplate from \"../Screens/screenTemplate\";\nimport ChatStyles from \"../Screens/chatStyles\";\n\nconst Alerts = () => {\n    const chatAlert = () =>\n        Alert.alert('Alert Title', 'My Alert Msg', [\n            {\n                text: 'Cancel',\n                onPress: () => console.log('Cancel Pressed'),\n                style: 'cancel',\n            },\n            {text: 'OK', onPress: () => console.log('OK Pressed')},\n        ]);\n    const emailAlert = () =>\n        Alert.alert('Alert Title', 'My Alert Msg', [\n            {\n                text: 'Ask me later',\n                onPress: () => console.log('Ask me later pressed')\n            }\n        ]);\n    return (\n        <ScreenTemplate>\n          <ScrollView>\n            <View\n                style={{\n                  height: 50,\n                  backgroundColor:'white',\n                  justifyContent:'center',\n                  borderBottomWidth:2,\n                  borderColor:'black',\n                  borderStyle:'solid'\n                }}>\n                <Text>Chat with a librarian!</Text>\n              </View>\n            <View>\n              <Button title={'Chat'} onPress={chatAlert}></Button>\n              <Button title={'Email'} onPress={emailAlert}></Button>\n            </View>\n          </ScrollView>\n        </ScreenTemplate>\n    );\n};\n\nexport default Alerts;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAK1B,OAAOC,cAAc;AACrB,OAAOC,UAAU;AAEjB,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACjB,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA;IAAA,OACXJ,KAAK,CAACK,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,CACvC;MACIC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAAA;MAC5CC,KAAK,EAAE;IACX,CAAC,EACD;MAACJ,IAAI,EAAE,IAAI;MAAEC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAAA;IAAA,CAAC,CACzD,CAAC;EAAA;EACN,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAA;IAAA,OACZX,KAAK,CAACK,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,CACvC;MACIC,IAAI,EAAE,cAAc;MACpBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MAAA;IACtD,CAAC,CACJ,CAAC;EAAA;EACN,OACIf,KAAA,CAAAkB,aAAA,CAACX,cAAc,QACbP,KAAA,CAAAkB,aAAA,CAACjB,UAAU,QACTD,KAAA,CAAAkB,aAAA,CAACd,IAAI;IACDY,KAAK,EAAE;MACLG,MAAM,EAAE,EAAE;MACVC,eAAe,EAAC,OAAO;MACvBC,cAAc,EAAC,QAAQ;MACvBC,iBAAiB,EAAC,CAAC;MACnBC,WAAW,EAAC,OAAO;MACnBC,WAAW,EAAC;IACd;EAAE,GACFxB,KAAA,CAAAkB,aAAA,CAACf,IAAI,QAAC,wBAAsB,CAAO,CAC9B,EACTH,KAAA,CAAAkB,aAAA,CAACd,IAAI,QACHJ,KAAA,CAAAkB,aAAA,CAACb,MAAM;IAACoB,KAAK,EAAE,MAAO;IAACZ,OAAO,EAAEH;EAAU,EAAU,EACpDV,KAAA,CAAAkB,aAAA,CAACb,MAAM;IAACoB,KAAK,EAAE,OAAQ;IAACZ,OAAO,EAAEI;EAAW,EAAU,CACjD,CACI,CACE;AAEzB,CAAC;AAED,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}